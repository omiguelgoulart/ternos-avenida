// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 Int          @id @default(autoincrement())
  nome               String
  email              String       @unique
  senha              String
  criadoEm           DateTime     @default(now())
  atualizadoEm       DateTime    @default(now())
  resetToken         String?   
  resetTokenExpires  DateTime? 
  ultimoLogin        DateTime?
  bloqueado          Boolean      @default(false)
  bloqueadoAte       DateTime?
  tentativasLogin    Int?          @default(0)

  produtosCadastrados Produto[]
  logs        Log[]
  @@map("usuarios")
}

model Log {
  id           Int      @id @default(autoincrement())
  descricao    String   @db.VarChar(60)
  complemento  String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  usuarioId    Int
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])

  @@map("logs")
}

enum CategoriaProduto {
  FORMAL
  CASUAL
  CASAMENTO
}

model Produto {
  id          Int          @id @default(autoincrement())
  nome          String
  descricao     String
  preco         Float
  estoque       Int
  categoria     CategoriaProduto    @default(FORMAL)
  criadoEm      DateTime            @default(now())
  atualizadoEm  DateTime            @default(now())

  criadoPorId   Int
  criadoPor     Usuario             @relation(fields: [criadoPorId], references: [id])

  @@map("produtos")
}

